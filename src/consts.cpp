#include "main.h"

const char *getGLParamName(unsigned int param){

	switch (param){
		case 0x0: return "GL_FALSE OR GL_POINTS OR GL_ZERO OR GL_NONE OR GL_NO_ERROR";
		case 0x1: return "GL_VERSION_1_1 OR GL_VERSION_1_2 OR GL_VERSION_1_3 OR GL_ARB_imaging OR GL_TRUE OR GL_LINES OR GL_ONE OR GL_CURRENT_BIT OR GL_CLIENT_PIXEL_STORE_BIT OR GL_ARB_multitexture OR GL_MESA_shader_debug OR GL_MESA_packed_depth_stencil OR GL_MESA_program_debug OR GL_MESA_texture_array OR GL_ATI_blend_equation_separate OR GL_OES_EGL_image";
		case 0x2: return "GL_LINE_LOOP OR GL_POINT_BIT OR GL_CLIENT_VERTEX_ARRAY_BIT";
		case 0x3: return "GL_LINE_STRIP";
		case 0x4: return "GL_TRIANGLES OR GL_LINE_BIT";
		case 0x3005: return "GL_CLIP_PLANE5";
		case 0x6: return "GL_TRIANGLE_FAN";
		case 0x3001: return "GL_CLIP_PLANE1";
		case 0x8: return "GL_QUAD_STRIP OR GL_POLYGON_BIT";
		case 0x9: return "GL_POLYGON";
		case 0x800a: return "GL_FUNC_SUBTRACT";
		case 0x800b: return "GL_FUNC_REVERSE_SUBTRACT";
		case 0x4002: return "GL_LIGHT2";
		case 0x10: return "GL_POLYGON_STIPPLE_BIT";
		case 0x8011: return "GL_CONVOLUTION_2D";
		case 0x8012: return "GL_SEPARABLE_2D";
		case 0x4003: return "GL_LIGHT3";
		case 0x8014: return "GL_CONVOLUTION_FILTER_SCALE";
		case 0x8015: return "GL_CONVOLUTION_FILTER_BIAS";
		case 0x8016: return "GL_REDUCE";
		case 0x8017: return "GL_CONVOLUTION_FORMAT";
		case 0x8018: return "GL_CONVOLUTION_WIDTH";
		case 0x4004: return "GL_LIGHT4";
		case 0x801a: return "GL_MAX_CONVOLUTION_WIDTH";
		case 0x801b: return "GL_MAX_CONVOLUTION_HEIGHT";
		case 0x801c: return "GL_POST_CONVOLUTION_RED_SCALE";
		case 0x801d: return "GL_POST_CONVOLUTION_GREEN_SCALE";
		case 0x801e: return "GL_POST_CONVOLUTION_BLUE_SCALE";
		case 0x405: return "GL_BACK";
		case 0x20: return "GL_PIXEL_MODE_BIT";
		case 0x8021: return "GL_POST_CONVOLUTION_GREEN_BIAS";
		case 0x8022: return "GL_POST_CONVOLUTION_BLUE_BIAS";
		case 0x8023: return "GL_POST_CONVOLUTION_ALPHA_BIAS";
		case 0x8024: return "GL_HISTOGRAM";
		case 0x4006: return "GL_LIGHT6";
		case 0x400: return "GL_FRONT_LEFT OR GL_STENCIL_BUFFER_BIT";
		case 0x8027: return "GL_HISTOGRAM_FORMAT";
		case 0x8028: return "GL_HISTOGRAM_RED_SIZE";
		case 0x8029: return "GL_HISTOGRAM_GREEN_SIZE";
		case 0x802a: return "GL_HISTOGRAM_BLUE_SIZE";
		case 0x4007: return "GL_LIGHT7";
		case 0x802c: return "GL_HISTOGRAM_LUMINANCE_SIZE";
		case 0x802d: return "GL_HISTOGRAM_SINK";
		case 0x802e: return "GL_MINMAX";
		case 0x802f: return "GL_MINMAX_FORMAT";
		case 0x8030: return "GL_MINMAX_SINK";
		case 0x408: return "GL_FRONT_AND_BACK";
		case 0x8032: return "GL_UNSIGNED_BYTE_3_3_2";
		case 0x8033: return "GL_UNSIGNED_SHORT_4_4_4_4";
		case 0x8034: return "GL_UNSIGNED_SHORT_5_5_5_1";
		case 0x8035: return "GL_UNSIGNED_INT_8_8_8_8";
		case 0x8036: return "GL_UNSIGNED_INT_10_10_10_2";
		case 0x409: return "GL_AUX0";
		case 0x8038: return "GL_POLYGON_OFFSET_FACTOR";
		case 0x803a: return "GL_RESCALE_NORMAL";
		case 0x803b: return "GL_ALPHA4";
		case 0x803c: return "GL_ALPHA8";
		case 0x40a: return "GL_AUX1";
		case 0x803e: return "GL_ALPHA16";
		case 0x803f: return "GL_LUMINANCE4";
		case 0x40: return "GL_LIGHTING_BIT";
		case 0x8041: return "GL_LUMINANCE12";
		case 0x8042: return "GL_LUMINANCE16";
		case 0x8043: return "GL_LUMINANCE4_ALPHA4";
		case 0x401: return "GL_FRONT_RIGHT";
		case 0x8045: return "GL_LUMINANCE8_ALPHA8";
		case 0x800: return "GL_EXP OR GL_VIEWPORT_BIT";
		case 0x8047: return "GL_LUMINANCE12_ALPHA12";
		case 0x8048: return "GL_LUMINANCE16_ALPHA16";
		case 0x8049: return "GL_INTENSITY";
		case 0x804a: return "GL_INTENSITY4";
		case 0x804b: return "GL_INTENSITY8";
		case 0x804c: return "GL_INTENSITY12";
		case 0x804d: return "GL_INTENSITY16";
		case 0x804f: return "GL_RGB4";
		case 0x8050: return "GL_RGB5";
		case 0x8051: return "GL_RGB8";
		case 0x8052: return "GL_RGB10";
		case 0x8053: return "GL_RGB12";
		case 0x8054: return "GL_RGB16";
		case 0x8055: return "GL_RGBA2";
		case 0x8056: return "GL_RGBA4";
		case 0x8057: return "GL_RGB5_A1";
		case 0x8058: return "GL_RGBA8";
		case 0x8059: return "GL_RGB10_A2";
		case 0x805a: return "GL_RGBA12";
		case 0x805b: return "GL_RGBA16";
		case 0x805c: return "GL_TEXTURE_RED_SIZE";
		case 0x805d: return "GL_TEXTURE_GREEN_SIZE";
		case 0x805e: return "GL_TEXTURE_BLUE_SIZE";
		case 0x805f: return "GL_TEXTURE_ALPHA_SIZE";
		case 0x8060: return "GL_TEXTURE_LUMINANCE_SIZE";
		case 0x8061: return "GL_TEXTURE_INTENSITY_SIZE";
		case 0x402: return "GL_BACK_LEFT";
		case 0x8063: return "GL_PROXY_TEXTURE_1D";
		case 0x801: return "GL_EXP2";
		case 0x8066: return "GL_TEXTURE_PRIORITY";
		case 0x8067: return "GL_TEXTURE_RESIDENT";
		case 0x8068: return "GL_TEXTURE_BINDING_1D";
		case 0x8069: return "GL_TEXTURE_BINDING_2D";
		case 0x806a: return "GL_TEXTURE_BINDING_3D";
		case 0x806b: return "GL_PACK_SKIP_IMAGES";
		case 0x806c: return "GL_PACK_IMAGE_HEIGHT";
		case 0x806d: return "GL_UNPACK_SKIP_IMAGES";
		case 0x806e: return "GL_UNPACK_IMAGE_HEIGHT";
		case 0x806f: return "GL_TEXTURE_3D";
		case 0x8070: return "GL_PROXY_TEXTURE_3D";
		case 0x8071: return "GL_TEXTURE_DEPTH";
		case 0x8072: return "GL_TEXTURE_WRAP_R";
		case 0x8073: return "GL_MAX_3D_TEXTURE_SIZE";
		case 0x8074: return "GL_VERTEX_ARRAY";
		case 0x8075: return "GL_NORMAL_ARRAY";
		case 0x8076: return "GL_COLOR_ARRAY";
		case 0x8077: return "GL_INDEX_ARRAY";
		case 0x8078: return "GL_TEXTURE_COORD_ARRAY";
		case 0x8079: return "GL_EDGE_FLAG_ARRAY";
		case 0x807a: return "GL_VERTEX_ARRAY_SIZE";
		case 0x807b: return "GL_VERTEX_ARRAY_TYPE";
		case 0x807c: return "GL_VERTEX_ARRAY_STRIDE";
		case 0x807e: return "GL_NORMAL_ARRAY_TYPE";
		case 0x807f: return "GL_NORMAL_ARRAY_STRIDE";
		case 0x403: return "GL_BACK_RIGHT";
		case 0x8081: return "GL_COLOR_ARRAY_SIZE";
		case 0x8082: return "GL_COLOR_ARRAY_TYPE";
		case 0x8083: return "GL_COLOR_ARRAY_STRIDE";
		case 0xc01: return "GL_DRAW_BUFFER";
		case 0x8085: return "GL_INDEX_ARRAY_TYPE";
		case 0x8086: return "GL_INDEX_ARRAY_STRIDE";
		case 0x8088: return "GL_TEXTURE_COORD_ARRAY_SIZE";
		case 0x8089: return "GL_TEXTURE_COORD_ARRAY_TYPE";
		case 0x808a: return "GL_TEXTURE_COORD_ARRAY_STRIDE";
		case 0x808c: return "GL_EDGE_FLAG_ARRAY_STRIDE";
		case 0x808e: return "GL_VERTEX_ARRAY_POINTER";
		case 0x808f: return "GL_NORMAL_ARRAY_POINTER";
		case 0x8090: return "GL_COLOR_ARRAY_POINTER";
		case 0x8091: return "GL_INDEX_ARRAY_POINTER";
		case 0x8092: return "GL_TEXTURE_COORD_ARRAY_POINTER";
		case 0x8093: return "GL_EDGE_FLAG_ARRAY_POINTER";
		case 0x8019: return "GL_CONVOLUTION_HEIGHT";
		case 0x5: return "GL_TRIANGLE_STRIP";
		case 0x809d: return "GL_MULTISAMPLE";
		case 0x404: return "GL_FRONT";
		case 0x20000: return "GL_LIST_BIT";
		case 0x80a0: return "GL_SAMPLE_COVERAGE";
		case 0x8570: return "GL_COMBINE";
		case 0xc02: return "GL_READ_BUFFER";
		case 0x1001: return "GL_TEXTURE_HEIGHT";
		case 0x1400: return "GL_BYTE";
		case 0x80a8: return "GL_SAMPLE_BUFFERS";
		case 0x80a9: return "GL_SAMPLES";
		case 0x80aa: return "GL_SAMPLE_COVERAGE_VALUE";
		case 0x80ab: return "GL_SAMPLE_COVERAGE_INVERT";
		case 0x80b1: return "GL_COLOR_MATRIX";
		case 0x80b2: return "GL_COLOR_MATRIX_STACK_DEPTH";
		case 0x80b3: return "GL_MAX_COLOR_MATRIX_STACK_DEPTH";
		case 0x80b4: return "GL_POST_COLOR_MATRIX_RED_SCALE";
		case 0x80b5: return "GL_POST_COLOR_MATRIX_GREEN_SCALE";
		case 0x80b6: return "GL_POST_COLOR_MATRIX_BLUE_SCALE";
		case 0x80b7: return "GL_POST_COLOR_MATRIX_ALPHA_SCALE";
		case 0x80b8: return "GL_POST_COLOR_MATRIX_RED_BIAS";
		case 0x80b9: return "GL_POST_COLOR_MATRIX_GREEN_BIAS";
		case 0x80ba: return "GL_POST_COLOR_MATRIX_BLUE_BIAS";
		case 0x801f: return "GL_POST_CONVOLUTION_ALPHA_SCALE";
		case 0x8020: return "GL_POST_CONVOLUTION_RED_BIAS";
		case 0x8576: return "GL_CONSTANT";
		case 0x1800: return "GL_COLOR";
		case 0x80d0: return "GL_COLOR_TABLE";
		case 0x80d1: return "GL_POST_CONVOLUTION_COLOR_TABLE";
		case 0x80d2: return "GL_POST_COLOR_MATRIX_COLOR_TABLE";
		case 0x80d3: return "GL_PROXY_COLOR_TABLE";
		case 0x80d4: return "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE";
		case 0x80d5: return "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE";
		case 0x80d6: return "GL_COLOR_TABLE_SCALE";
		case 0x80d7: return "GL_COLOR_TABLE_BIAS";
		case 0x7: return "GL_QUADS";
		case 0x80d9: return "GL_COLOR_TABLE_WIDTH";
		case 0x406: return "GL_LEFT";
		case 0x80db: return "GL_COLOR_TABLE_GREEN_SIZE";
		case 0x80dc: return "GL_COLOR_TABLE_BLUE_SIZE";
		case 0x80dd: return "GL_COLOR_TABLE_ALPHA_SIZE";
		case 0x80de: return "GL_COLOR_TABLE_LUMINANCE_SIZE";
		case 0x80df: return "GL_COLOR_TABLE_INTENSITY_SIZE";
		case 0x1003: return "GL_TEXTURE_COMPONENTS OR GL_TEXTURE_INTERNAL_FORMAT";
		case 0x80e1: return "GL_BGRA";
		case 0x1801: return "GL_DEPTH";
		case 0x8026: return "GL_HISTOGRAM_WIDTH";
		case 0x1c00: return "GL_RENDER";
		case 0x80e8: return "GL_MAX_ELEMENTS_VERTICES";
		case 0x80e9: return "GL_MAX_ELEMENTS_INDICES";
		case 0x8008: return "GL_MAX";
		case 0x407: return "GL_RIGHT";
		case 0x1004: return "GL_TEXTURE_BORDER_COLOR";
		case 0x88ff: return "GL_MAX_ARRAY_TEXTURE_LAYERS_EXT";
		case 0x100: return "GL_ACCUM OR GL_DEPTH_BUFFER_BIT";
		case 0x901: return "GL_CCW";
		case 0x102: return "GL_RETURN";
		case 0x103: return "GL_MULT";
		case 0x1904: return "GL_GREEN";
		case 0x1905: return "GL_BLUE";
		case 0x1906: return "GL_ALPHA";
		case 0x1907: return "GL_RGB";
		case 0x1908: return "GL_RGBA";
		case 0x1909: return "GL_LUMINANCE";
		case 0x190a: return "GL_LUMINANCE_ALPHA";
		case 0x802b: return "GL_HISTOGRAM_ALPHA_SIZE";
		case 0x1005: return "GL_TEXTURE_BORDER";
		case 0x40000: return "GL_TEXTURE_BIT";
		case 0x1c02: return "GL_SELECT";
		case 0x2001: return "GL_T";
		case 0x2400: return "GL_EYE_LINEAR";
		case 0x8031: return "GL_TABLE_TOO_LARGE";
		case 0x812d: return "GL_CLAMP_TO_BORDER";
		case 0x812f: return "GL_CLAMP_TO_EDGE";
		case 0x8580: return "GL_SOURCE0_RGB";
		case 0x813a: return "GL_TEXTURE_MIN_LOD";
		case 0x813b: return "GL_TEXTURE_MAX_LOD";
		case 0x813c: return "GL_TEXTURE_BASE_LEVEL";
		case 0x813d: return "GL_TEXTURE_MAX_LEVEL";
		case 0x2002: return "GL_R";
		case 0x2401: return "GL_OBJECT_LINEAR";
		case 0x2800: return "GL_TEXTURE_MAG_FILTER";
		case 0x8037: return "GL_POLYGON_OFFSET_FILL";
		case 0x8151: return "GL_CONSTANT_BORDER";
		case 0x20000000: return "GL_MULTISAMPLE_BIT";
		case 0x8153: return "GL_REPLICATE_BORDER";
		case 0x8154: return "GL_CONVOLUTION_BORDER_COLOR";
		case 0x2003: return "GL_Q";
		case 0x8590: return "GL_OPERAND0_RGB";
		case 0x2402: return "GL_SPHERE_MAP";
		case 0x2801: return "GL_TEXTURE_MIN_FILTER";
		case 0x8591: return "GL_OPERAND1_RGB";
		case 0x8592: return "GL_OPERAND2_RGB";
		case 0x803d: return "GL_ALPHA12";
		case 0x2200: return "GL_TEXTURE_ENV_MODE";
		case 0x8040: return "GL_LUMINANCE8";
		case 0x2802: return "GL_TEXTURE_WRAP_S";
		case 0x8009: return "GL_BLEND_EQUATION";
		case 0x3000: return "GL_CLIP_PLANE0";
		case 0x8598: return "GL_OPERAND0_ALPHA";
		case 0x8044: return "GL_LUMINANCE6_ALPHA2";
		case 0x2803: return "GL_TEXTURE_WRAP_T";
		case 0x8046: return "GL_LUMINANCE12_ALPHA4";
		case 0x8363: return "GL_UNSIGNED_SHORT_5_6_5";
		case 0x3002: return "GL_CLIP_PLANE2";
		case 0x10000: return "GL_EVAL_BIT";
		case 0x3003: return "GL_CLIP_PLANE3";
		case 0x8025: return "GL_PROXY_HISTOGRAM";
		case 0x80bb: return "GL_POST_COLOR_MATRIX_ALPHA_BIAS";
		case 0x81f8: return "GL_LIGHT_MODEL_COLOR_CONTROL";
		case 0xc54: return "GL_FOG_HINT";
		case 0x81fa: return "GL_SEPARATE_SPECULAR_COLOR";
		case 0x3004: return "GL_CLIP_PLANE4";
		case 0x200: return "GL_NEVER OR GL_ACCUM_BUFFER_BIT";
		case 0x201: return "GL_LESS";
		case 0x202: return "GL_EQUAL";
		case 0x203: return "GL_LEQUAL";
		case 0x204: return "GL_GREATER";
		case 0x205: return "GL_NOTEQUAL";
		case 0x4000: return "GL_LIGHT0 OR GL_COLOR_BUFFER_BIT";
		case 0xb01: return "GL_CURRENT_INDEX";
		case 0x1208: return "GL_LINEAR_ATTENUATION";
		case 0x1209: return "GL_QUADRATIC_ATTENUATION";
		case 0x2703: return "GL_LINEAR_MIPMAP_LINEAR";
		case 0xb02: return "GL_CURRENT_NORMAL";
		case 0x2a10: return "GL_R3_G3_B2";
		case 0xb03: return "GL_CURRENT_TEXTURE_COORDS";
		case 0x2600: return "GL_NEAREST";
		case 0x304: return "GL_DST_ALPHA";
		case 0x305: return "GL_ONE_MINUS_DST_ALPHA";
		case 0x2a20: return "GL_V2F";
		case 0x2a21: return "GL_V3F";
		case 0x2a22: return "GL_C4UB_V2F";
		case 0x2a23: return "GL_C4UB_V3F";
		case 0x2a24: return "GL_C3F_V3F";
		case 0x2a25: return "GL_N3F_V3F";
		case 0x2a26: return "GL_C4F_N3F_V3F";
		case 0x2a27: return "GL_T2F_V3F";
		case 0x2a28: return "GL_T4F_V4F";
		case 0x2a29: return "GL_T2F_C4UB_V3F";
		case 0x2a2a: return "GL_T2F_C3F_V3F";
		case 0x2a2b: return "GL_T2F_N3F_V3F";
		case 0x2a2c: return "GL_T2F_C4F_N3F_V3F";
		case 0x2a2d: return "GL_T4F_C4F_N3F_V4F";
		case 0xb08: return "GL_CURRENT_RASTER_POSITION_VALID";
		case 0x2201: return "GL_TEXTURE_ENV_COLOR";
		case 0x8064: return "GL_PROXY_TEXTURE_2D";
		case 0xb00: return "GL_CURRENT_COLOR";
		case 0x4005: return "GL_LIGHT5";
		case 0x1300: return "GL_COMPILE";
		case 0x1000: return "GL_TEXTURE_WIDTH OR GL_TRANSFORM_BIT";
		case 0x80000: return "GL_SCISSOR_BIT";
		case 0x2a00: return "GL_POLYGON_OFFSET_UNITS";
		case 0x1301: return "GL_COMPILE_AND_EXECUTE";
		case 0x1700: return "GL_MODELVIEW";
		case 0x4001: return "GL_LIGHT1";
		case 0x1701: return "GL_PROJECTION";
		case 0x1b00: return "GL_POINT";
		case 0x1702: return "GL_TEXTURE";
		case 0x1b01: return "GL_LINE";
		case 0x1f00: return "GL_VENDOR";
		case 0x300: return "GL_SRC_COLOR";
		case 0x301: return "GL_ONE_MINUS_SRC_COLOR";
		case 0x302: return "GL_SRC_ALPHA";
		case 0x303: return "GL_ONE_MINUS_SRC_ALPHA";
		case 0xb04: return "GL_CURRENT_RASTER_COLOR";
		case 0xb05: return "GL_CURRENT_RASTER_INDEX";
		case 0x306: return "GL_DST_COLOR";
		case 0x307: return "GL_ONE_MINUS_DST_COLOR";
		case 0x308: return "GL_SRC_ALPHA_SATURATE";
		case 0xb09: return "GL_CURRENT_RASTER_DISTANCE";
		case 0xb10: return "GL_POINT_SMOOTH";
		case 0xb11: return "GL_POINT_SIZE";
		case 0xb12: return "GL_POINT_SIZE_RANGE OR GL_SMOOTH_POINT_SIZE_RANGE";
		case 0xb13: return "GL_POINT_SIZE_GRANULARITY OR GL_SMOOTH_POINT_SIZE_GRANULARITY";
		case 0x1b02: return "GL_FILL";
		case 0x1f01: return "GL_RENDERER";
		case 0x2300: return "GL_TEXTURE_ENV";
		case 0xb20: return "GL_LINE_SMOOTH";
		case 0xb21: return "GL_LINE_WIDTH";
		case 0xb22: return "GL_LINE_WIDTH_RANGE OR GL_SMOOTH_LINE_WIDTH_RANGE";
		case 0xb23: return "GL_LINE_WIDTH_GRANULARITY OR GL_SMOOTH_LINE_WIDTH_GRANULARITY";
		case 0xb24: return "GL_LINE_STIPPLE";
		case 0xb25: return "GL_LINE_STIPPLE_PATTERN";
		case 0xb26: return "GL_LINE_STIPPLE_REPEAT";
		case 0xb30: return "GL_LIST_MODE";
		case 0xb31: return "GL_MAX_LIST_NESTING";
		case 0xb32: return "GL_LIST_BASE";
		case 0xb33: return "GL_LIST_INDEX";
		case 0x1f02: return "GL_VERSION";
		case 0x2700: return "GL_NEAREST_MIPMAP_NEAREST";
		case 0xb40: return "GL_POLYGON_MODE";
		case 0xb41: return "GL_POLYGON_SMOOTH";
		case 0xb42: return "GL_POLYGON_STIPPLE";
		case 0xb43: return "GL_EDGE_FLAG";
		case 0xb44: return "GL_CULL_FACE";
		case 0xb45: return "GL_CULL_FACE_MODE";
		case 0xb46: return "GL_FRONT_FACE";
		case 0xb50: return "GL_LIGHTING";
		case 0xb51: return "GL_LIGHT_MODEL_LOCAL_VIEWER";
		case 0xb52: return "GL_LIGHT_MODEL_TWO_SIDE";
		case 0xb53: return "GL_LIGHT_MODEL_AMBIENT";
		case 0xb54: return "GL_SHADE_MODEL";
		case 0xb55: return "GL_COLOR_MATERIAL_FACE";
		case 0xb56: return "GL_COLOR_MATERIAL_PARAMETER";
		case 0xb57: return "GL_COLOR_MATERIAL";
		case 0x1f03: return "GL_EXTENSIONS";
		case 0x2701: return "GL_LINEAR_MIPMAP_NEAREST";
		case 0xb60: return "GL_FOG";
		case 0xb61: return "GL_FOG_INDEX";
		case 0xb62: return "GL_FOG_DENSITY";
		case 0xb63: return "GL_FOG_START";
		case 0xb64: return "GL_FOG_END";
		case 0xb65: return "GL_FOG_MODE";
		case 0xb66: return "GL_FOG_COLOR";
		case 0x8367: return "GL_UNSIGNED_INT_8_8_8_8_REV";
		case 0x8368: return "GL_UNSIGNED_INT_2_10_10_10_REV";
		case 0x883d: return "GL_ALPHA_BLEND_EQUATION_ATI";
		case 0xb70: return "GL_DEPTH_RANGE";
		case 0xb71: return "GL_DEPTH_TEST";
		case 0xb72: return "GL_DEPTH_WRITEMASK";
		case 0xb73: return "GL_DEPTH_CLEAR_VALUE";
		case 0xb74: return "GL_DEPTH_FUNC";
		case 0x2702: return "GL_NEAREST_MIPMAP_LINEAR";
		case 0xb80: return "GL_ACCUM_CLEAR_VALUE";
		case 0xb90: return "GL_STENCIL_TEST";
		case 0xb91: return "GL_STENCIL_CLEAR_VALUE";
		case 0xb92: return "GL_STENCIL_FUNC";
		case 0xb93: return "GL_STENCIL_VALUE_MASK";
		case 0xb94: return "GL_STENCIL_FAIL";
		case 0xb95: return "GL_STENCIL_PASS_DEPTH_FAIL";
		case 0xb96: return "GL_STENCIL_PASS_DEPTH_PASS";
		case 0xb97: return "GL_STENCIL_REF";
		case 0xb98: return "GL_STENCIL_WRITEMASK";
		case 0xba0: return "GL_MATRIX_MODE";
		case 0xba1: return "GL_NORMALIZE";
		case 0xba2: return "GL_VIEWPORT";
		case 0xba3: return "GL_MODELVIEW_STACK_DEPTH";
		case 0xba4: return "GL_PROJECTION_STACK_DEPTH";
		case 0xba5: return "GL_TEXTURE_STACK_DEPTH";
		case 0xba6: return "GL_MODELVIEW_MATRIX";
		case 0xba7: return "GL_PROJECTION_MATRIX";
		case 0xba8: return "GL_TEXTURE_MATRIX";
		case 0xbb0: return "GL_ATTRIB_STACK_DEPTH";
		case 0xbb1: return "GL_CLIENT_ATTRIB_STACK_DEPTH";
		case 0x8bb2: return "GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA";
		case 0x8bb3: return "GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA";
		case 0x8bb4: return "GL_VERTEX_PROGRAM_POSITION_MESA";
		case 0x809e: return "GL_SAMPLE_ALPHA_TO_COVERAGE";
		case 0x8bb6: return "GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA";
		case 0x8bb7: return "GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA";
		case 0x809f: return "GL_SAMPLE_ALPHA_TO_ONE";
		case 0xbc0: return "GL_ALPHA_TEST";
		case 0xbc1: return "GL_ALPHA_TEST_FUNC";
		case 0xbc2: return "GL_ALPHA_TEST_REF";
		case 0xbd0: return "GL_DITHER";
		case 0x81f9: return "GL_SINGLE_COLOR";
		case 0xbe0: return "GL_BLEND_DST";
		case 0xbe1: return "GL_BLEND_SRC";
		case 0xbe2: return "GL_BLEND";
		case 0x2a02: return "GL_POLYGON_OFFSET_LINE";
		case 0xbf0: return "GL_LOGIC_OP_MODE";
		case 0xbf1: return "GL_LOGIC_OP OR GL_INDEX_LOGIC_OP";
		case 0xbf2: return "GL_COLOR_LOGIC_OP";
		case 0xc00: return "GL_AUX_BUFFERS";
		case 0x1401: return "GL_UNSIGNED_BYTE";
		case 0x1402: return "GL_SHORT";
		case 0x1403: return "GL_UNSIGNED_SHORT";
		case 0x1404: return "GL_INT";
		case 0x1405: return "GL_UNSIGNED_INT";
		case 0x1406: return "GL_FLOAT";
		case 0x1407: return "GL_2_BYTES";
		case 0x1408: return "GL_3_BYTES";
		case 0x1409: return "GL_4_BYTES";
		case 0x140a: return "GL_DOUBLE";
		case 0x40b: return "GL_AUX2";
		case 0x40c: return "GL_AUX3";
		case 0x1202: return "GL_SPECULAR";
		case 0xc10: return "GL_SCISSOR_BOX";
		case 0xc11: return "GL_SCISSOR_TEST";
		case 0x1603: return "GL_COLOR_INDEXES";
		case 0x8c18: return "GL_TEXTURE_1D_ARRAY_EXT";
		case 0x1204: return "GL_SPOT_DIRECTION";
		case 0x8c1a: return "GL_TEXTURE_2D_ARRAY_EXT";
		case 0x8c1b: return "GL_PROXY_TEXTURE_2D_ARRAY_EXT";
		case 0x8c1c: return "GL_TEXTURE_BINDING_1D_ARRAY_EXT";
		case 0x8c1d: return "GL_TEXTURE_BINDING_2D_ARRAY_EXT";
		case 0x1205: return "GL_SPOT_EXPONENT";
		case 0xc20: return "GL_INDEX_CLEAR_VALUE";
		case 0xc21: return "GL_INDEX_WRITEMASK";
		case 0xc22: return "GL_COLOR_CLEAR_VALUE";
		case 0xc23: return "GL_COLOR_WRITEMASK";
		case 0x8001: return "GL_CONSTANT_COLOR";
		case 0x206: return "GL_GEQUAL";
		case 0x207: return "GL_ALWAYS";
		case 0x8511: return "GL_NORMAL_MAP";
		case 0xc30: return "GL_INDEX_MODE";
		case 0xc31: return "GL_RGBA_MODE";
		case 0xc32: return "GL_DOUBLEBUFFER";
		case 0xc33: return "GL_STEREO";
		case 0xcb4: return "GL_PIXEL_MAP_I_TO_B_SIZE";
		case 0x8000: return "GL_HINT_BIT";
		case 0xc40: return "GL_RENDER_MODE";
		case 0x8002: return "GL_ONE_MINUS_CONSTANT_COLOR";
		case 0xcb6: return "GL_PIXEL_MAP_R_TO_R_SIZE";
		case 0x8362: return "GL_UNSIGNED_BYTE_2_3_3_REV";
		case 0xc50: return "GL_PERSPECTIVE_CORRECTION_HINT";
		case 0xc51: return "GL_POINT_SMOOTH_HINT";
		case 0xc52: return "GL_LINE_SMOOTH_HINT";
		case 0xc53: return "GL_POLYGON_SMOOTH_HINT";
		case 0x601: return "GL_3D";
		case 0xa00: return "GL_COEFF";
		case 0x8364: return "GL_UNSIGNED_SHORT_5_6_5_REV";
		case 0x8365: return "GL_UNSIGNED_SHORT_4_4_4_4_REV";
		case 0xc60: return "GL_TEXTURE_GEN_S";
		case 0xc61: return "GL_TEXTURE_GEN_T";
		case 0xc62: return "GL_TEXTURE_GEN_R";
		case 0xc63: return "GL_TEXTURE_GEN_Q";
		case 0x8366: return "GL_UNSIGNED_SHORT_1_5_5_5_REV";
		case 0x846d: return "GL_ALIASED_POINT_SIZE_RANGE";
		case 0x846e: return "GL_ALIASED_LINE_WIDTH_RANGE";
		case 0xc70: return "GL_PIXEL_MAP_I_TO_I";
		case 0xc71: return "GL_PIXEL_MAP_S_TO_S";
		case 0xc72: return "GL_PIXEL_MAP_I_TO_R";
		case 0xc73: return "GL_PIXEL_MAP_I_TO_G";
		case 0xa01: return "GL_ORDER";
		case 0xc75: return "GL_PIXEL_MAP_I_TO_A";
		case 0xc76: return "GL_PIXEL_MAP_R_TO_R";
		case 0xc77: return "GL_PIXEL_MAP_G_TO_G";
		case 0xc78: return "GL_PIXEL_MAP_B_TO_B";
		case 0xc79: return "GL_PIXEL_MAP_A_TO_A";
		case 0x8004: return "GL_ONE_MINUS_CONSTANT_ALPHA";
		case 0x80da: return "GL_COLOR_TABLE_RED_SIZE";
		case 0x8514: return "GL_TEXTURE_BINDING_CUBE_MAP";
		case 0xa02: return "GL_DOMAIN";
		case 0x1200: return "GL_AMBIENT";
		case 0x8005: return "GL_BLEND_COLOR";
		case 0x86ae: return "GL_DOT3_RGB";
		case 0xcb0: return "GL_PIXEL_MAP_I_TO_I_SIZE";
		case 0xcb1: return "GL_PIXEL_MAP_S_TO_S_SIZE";
		case 0xcb2: return "GL_PIXEL_MAP_I_TO_R_SIZE";
		case 0xcb3: return "GL_PIXEL_MAP_I_TO_G_SIZE";
		case 0x1201: return "GL_DIFFUSE";
		case 0xcb5: return "GL_PIXEL_MAP_I_TO_A_SIZE";
		case 0x1600: return "GL_EMISSION";
		case 0xcb7: return "GL_PIXEL_MAP_G_TO_G_SIZE";
		case 0xcb8: return "GL_PIXEL_MAP_B_TO_B_SIZE";
		case 0xcb9: return "GL_PIXEL_MAP_A_TO_A_SIZE";
		case 0x8006: return "GL_FUNC_ADD";
		case 0x84c0: return "GL_TEXTURE0 OR GL_TEXTURE0_ARB";
		case 0x84c1: return "GL_TEXTURE1 OR GL_TEXTURE1_ARB";
		case 0x84c2: return "GL_TEXTURE2 OR GL_TEXTURE2_ARB";
		case 0x84c3: return "GL_TEXTURE3 OR GL_TEXTURE3_ARB";
		case 0x84c4: return "GL_TEXTURE4 OR GL_TEXTURE4_ARB";
		case 0x84c5: return "GL_TEXTURE5 OR GL_TEXTURE5_ARB";
		case 0x84c6: return "GL_TEXTURE6 OR GL_TEXTURE6_ARB";
		case 0x84c7: return "GL_TEXTURE7 OR GL_TEXTURE7_ARB";
		case 0x84c8: return "GL_TEXTURE8 OR GL_TEXTURE8_ARB";
		case 0x84c9: return "GL_TEXTURE9 OR GL_TEXTURE9_ARB";
		case 0x84ca: return "GL_TEXTURE10 OR GL_TEXTURE10_ARB";
		case 0x84cb: return "GL_TEXTURE11 OR GL_TEXTURE11_ARB";
		case 0x84cc: return "GL_TEXTURE12 OR GL_TEXTURE12_ARB";
		case 0x84cd: return "GL_TEXTURE13 OR GL_TEXTURE13_ARB";
		case 0x84ce: return "GL_TEXTURE14 OR GL_TEXTURE14_ARB";
		case 0x84cf: return "GL_TEXTURE15 OR GL_TEXTURE15_ARB";
		case 0x84d0: return "GL_TEXTURE16 OR GL_TEXTURE16_ARB";
		case 0x84d1: return "GL_TEXTURE17 OR GL_TEXTURE17_ARB";
		case 0x84d2: return "GL_TEXTURE18 OR GL_TEXTURE18_ARB";
		case 0x84d3: return "GL_TEXTURE19 OR GL_TEXTURE19_ARB";
		case 0x1601: return "GL_SHININESS";
		case 0x84d5: return "GL_TEXTURE21 OR GL_TEXTURE21_ARB";
		case 0x1a00: return "GL_BITMAP";
		case 0x84d7: return "GL_TEXTURE23 OR GL_TEXTURE23_ARB";
		case 0x8007: return "GL_MIN";
		case 0x84d9: return "GL_TEXTURE25 OR GL_TEXTURE25_ARB";
		case 0x84da: return "GL_TEXTURE26 OR GL_TEXTURE26_ARB";
		case 0x84db: return "GL_TEXTURE27 OR GL_TEXTURE27_ARB";
		case 0x84dc: return "GL_TEXTURE28 OR GL_TEXTURE28_ARB";
		case 0x84dd: return "GL_TEXTURE29 OR GL_TEXTURE29_ARB";
		case 0x84de: return "GL_TEXTURE30 OR GL_TEXTURE30_ARB";
		case 0x84df: return "GL_TEXTURE31 OR GL_TEXTURE31_ARB";
		case 0x84e0: return "GL_ACTIVE_TEXTURE OR GL_ACTIVE_TEXTURE_ARB";
		case 0x84e1: return "GL_CLIENT_ACTIVE_TEXTURE OR GL_CLIENT_ACTIVE_TEXTURE_ARB";
		case 0x84e2: return "GL_MAX_TEXTURE_UNITS OR GL_MAX_TEXTURE_UNITS_ARB";
		case 0x84e3: return "GL_TRANSPOSE_MODELVIEW_MATRIX";
		case 0x84e4: return "GL_TRANSPOSE_PROJECTION_MATRIX";
		case 0x84e5: return "GL_TRANSPOSE_TEXTURE_MATRIX";
		case 0x84e6: return "GL_TRANSPOSE_COLOR_MATRIX";
		case 0x84e7: return "GL_SUBTRACT";
		case 0x84e9: return "GL_COMPRESSED_ALPHA";
		case 0x84ea: return "GL_COMPRESSED_LUMINANCE";
		case 0x84eb: return "GL_COMPRESSED_LUMINANCE_ALPHA";
		case 0x84ec: return "GL_COMPRESSED_INTENSITY";
		case 0x84ed: return "GL_COMPRESSED_RGB";
		case 0x84ee: return "GL_COMPRESSED_RGBA";
		case 0x84ef: return "GL_TEXTURE_COMPRESSION_HINT";
		case 0x1203: return "GL_POSITION";
		case 0xcf1: return "GL_UNPACK_LSB_FIRST";
		case 0x1602: return "GL_AMBIENT_AND_DIFFUSE";
		case 0xcf3: return "GL_UNPACK_SKIP_ROWS";
		case 0xcf4: return "GL_UNPACK_SKIP_PIXELS";
		case 0xcf5: return "GL_UNPACK_ALIGNMENT";
		case 0x1e00: return "GL_KEEP";
		case 0x84d4: return "GL_TEXTURE20 OR GL_TEXTURE20_ARB";
		case 0x1d00: return "GL_FLAT";
		case 0x1501: return "GL_AND";
		case 0x1502: return "GL_AND_REVERSE";
		case 0x1503: return "GL_COPY";
		case 0x1504: return "GL_AND_INVERTED";
		case 0x1505: return "GL_NOOP";
		case 0x1506: return "GL_XOR";
		case 0x1507: return "GL_OR";
		case 0x1508: return "GL_NOR";
		case 0x1509: return "GL_EQUIV";
		case 0x150a: return "GL_INVERT";
		case 0x150b: return "GL_OR_REVERSE";
		case 0x150c: return "GL_COPY_INVERTED";
		case 0x150d: return "GL_OR_INVERTED";
		case 0x150e: return "GL_NAND";
		case 0x150f: return "GL_SET";
		case 0xd10: return "GL_MAP_COLOR";
		case 0x1802: return "GL_STENCIL";
		case 0xd12: return "GL_INDEX_SHIFT";
		case 0xd13: return "GL_INDEX_OFFSET";
		case 0x1e01: return "GL_REPLACE";
		case 0xd15: return "GL_RED_BIAS";
		case 0xd16: return "GL_ZOOM_X";
		case 0xd17: return "GL_ZOOM_Y";
		case 0xd18: return "GL_GREEN_SCALE";
		case 0xd19: return "GL_GREEN_BIAS";
		case 0xd1a: return "GL_BLUE_SCALE";
		case 0xd1b: return "GL_BLUE_BIAS";
		case 0x1c01: return "GL_FEEDBACK";
		case 0xd1d: return "GL_ALPHA_BIAS";
		case 0xd1e: return "GL_DEPTH_SCALE";
		case 0xd1f: return "GL_DEPTH_BIAS";
		case 0x2000: return "GL_S OR GL_ENABLE_BIT";
		case 0xd30: return "GL_MAX_EVAL_ORDER";
		case 0xd31: return "GL_MAX_LIGHTS";
		case 0x1e02: return "GL_INCR";
		case 0xd33: return "GL_MAX_TEXTURE_SIZE";
		case 0xd34: return "GL_MAX_PIXEL_MAP_TABLE";
		case 0xd35: return "GL_MAX_ATTRIB_STACK_DEPTH";
		case 0xd36: return "GL_MAX_MODELVIEW_STACK_DEPTH";
		case 0xd37: return "GL_MAX_NAME_STACK_DEPTH";
		case 0xd38: return "GL_MAX_PROJECTION_STACK_DEPTH";
		case 0xd39: return "GL_MAX_TEXTURE_STACK_DEPTH";
		case 0xd3a: return "GL_MAX_VIEWPORT_DIMS";
		case 0xd3b: return "GL_MAX_CLIENT_ATTRIB_STACK_DEPTH";
		case 0x84d6: return "GL_TEXTURE22 OR GL_TEXTURE22_ARB";
		case 0x80e0: return "GL_BGR";
		case 0x8cd4: return "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT";
		case 0x1206: return "GL_SPOT_CUTOFF";
		case 0x1e03: return "GL_DECR";
		case 0xd51: return "GL_INDEX_BITS";
		case 0xd52: return "GL_RED_BITS";
		case 0xd53: return "GL_GREEN_BITS";
		case 0x2601: return "GL_LINEAR";
		case 0xd55: return "GL_ALPHA_BITS";
		case 0xd56: return "GL_DEPTH_BITS";
		case 0xd57: return "GL_STENCIL_BITS";
		case 0xd58: return "GL_ACCUM_RED_BITS";
		case 0xd59: return "GL_ACCUM_GREEN_BITS";
		case 0xd5a: return "GL_ACCUM_BLUE_BITS";
		case 0xd5b: return "GL_ACCUM_ALPHA_BITS";
		case 0x80d8: return "GL_COLOR_TABLE_FORMAT";
		case 0x1207: return "GL_CONSTANT_ATTENUATION";
		case 0xd70: return "GL_NAME_STACK_DEPTH";
		case 0x8571: return "GL_COMBINE_RGB";
		case 0x8572: return "GL_COMBINE_ALPHA";
		case 0x8573: return "GL_RGB_SCALE";
		case 0x2a01: return "GL_POLYGON_OFFSET_POINT";
		case 0x8575: return "GL_INTERPOLATE";
		case 0x851c: return "GL_MAX_CUBE_MAP_TEXTURE_SIZE";
		case 0x8577: return "GL_PRIMARY_COLOR";
		case 0x8578: return "GL_PREVIOUS";
		case 0x84d8: return "GL_TEXTURE24 OR GL_TEXTURE24_ARB";
		case 0xd80: return "GL_AUTO_NORMAL";
		case 0x8581: return "GL_SOURCE1_RGB";
		case 0x8582: return "GL_SOURCE2_RGB";
		case 0x8588: return "GL_SOURCE0_ALPHA";
		case 0x8589: return "GL_SOURCE1_ALPHA";
		case 0x858a: return "GL_SOURCE2_ALPHA";
		case 0xd90: return "GL_MAP1_COLOR_4";
		case 0xd91: return "GL_MAP1_INDEX";
		case 0xd92: return "GL_MAP1_NORMAL";
		case 0xd93: return "GL_MAP1_TEXTURE_COORD_1";
		case 0xd94: return "GL_MAP1_TEXTURE_COORD_2";
		case 0xd95: return "GL_MAP1_TEXTURE_COORD_3";
		case 0xd96: return "GL_MAP1_TEXTURE_COORD_4";
		case 0xd97: return "GL_MAP1_VERTEX_3";
		case 0xd98: return "GL_MAP1_VERTEX_4";
		case 0x8599: return "GL_OPERAND1_ALPHA";
		case 0x859a: return "GL_OPERAND2_ALPHA";
		case 0xcf0: return "GL_UNPACK_SWAP_BYTES";
		case 0xcf2: return "GL_UNPACK_ROW_LENGTH";
		case 0xdb0: return "GL_MAP2_COLOR_4";
		case 0xdb1: return "GL_MAP2_INDEX";
		case 0xdb2: return "GL_MAP2_NORMAL";
		case 0xdb3: return "GL_MAP2_TEXTURE_COORD_1";
		case 0xdb4: return "GL_MAP2_TEXTURE_COORD_2";
		case 0xdb5: return "GL_MAP2_TEXTURE_COORD_3";
		case 0xdb6: return "GL_MAP2_TEXTURE_COORD_4";
		case 0xdb7: return "GL_MAP2_VERTEX_3";
		case 0xdb8: return "GL_MAP2_VERTEX_4";
		case 0xdd0: return "GL_MAP1_GRID_DOMAIN";
		case 0xdd1: return "GL_MAP1_GRID_SEGMENTS";
		case 0xdd2: return "GL_MAP2_GRID_DOMAIN";
		case 0xdd3: return "GL_MAP2_GRID_SEGMENTS";
		case 0xde0: return "GL_TEXTURE_1D";
		case 0xde1: return "GL_TEXTURE_2D";
		case 0x8010: return "GL_CONVOLUTION_1D";
		case 0xdf0: return "GL_FEEDBACK_BUFFER_POINTER";
		case 0xdf1: return "GL_FEEDBACK_BUFFER_SIZE";
		case 0xdf2: return "GL_FEEDBACK_BUFFER_TYPE";
		case 0xdf3: return "GL_SELECTION_BUFFER_POINTER";
		case 0xdf4: return "GL_SELECTION_BUFFER_SIZE";
		case 0x600: return "GL_2D";
		case 0x900: return "GL_CW";
		case 0x602: return "GL_3D_COLOR";
		case 0x603: return "GL_3D_COLOR_TEXTURE";
		case 0x604: return "GL_4D_COLOR_TEXTURE";
		case 0x101: return "GL_LOAD";
		case 0xc74: return "GL_PIXEL_MAP_I_TO_B";
		case 0x1902: return "GL_DEPTH_COMPONENT";
		case 0x1903: return "GL_RED";
		case 0x104: return "GL_ADD";
		case 0xd05: return "GL_PACK_ALIGNMENT";
		case 0x8bb0: return "GL_FRAGMENT_PROGRAM_POSITION_MESA";
		case 0x8003: return "GL_CONSTANT_ALPHA";
		case 0x8bb1: return "GL_FRAGMENT_PROGRAM_CALLBACK_MESA";
		case 0x500: return "GL_INVALID_ENUM";
		case 0x8bb5: return "GL_VERTEX_PROGRAM_CALLBACK_MESA";
		case 0x8013: return "GL_CONVOLUTION_BORDER_MODE";
		case 0x501: return "GL_INVALID_VALUE";
		case 0xd11: return "GL_MAP_STENCIL";
		case 0x502: return "GL_INVALID_OPERATION";
		case 0x8512: return "GL_REFLECTION_MAP";
		case 0xd00: return "GL_PACK_SWAP_BYTES";
		case 0x8513: return "GL_TEXTURE_CUBE_MAP";
		case 0xd14: return "GL_RED_SCALE";
		case 0x8515: return "GL_TEXTURE_CUBE_MAP_POSITIVE_X";
		case 0x8516: return "GL_TEXTURE_CUBE_MAP_NEGATIVE_X";
		case 0x503: return "GL_STACK_OVERFLOW";
		case 0x8517: return "GL_TEXTURE_CUBE_MAP_POSITIVE_Y";
		case 0xd01: return "GL_PACK_LSB_FIRST";
		case 0x1100: return "GL_DONT_CARE";
		case 0x8518: return "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y";
		case 0x8519: return "GL_TEXTURE_CUBE_MAP_POSITIVE_Z";
		case 0x851a: return "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z";
		case 0x86a0: return "GL_TEXTURE_COMPRESSED_IMAGE_SIZE";
		case 0x86a1: return "GL_TEXTURE_COMPRESSED";
		case 0x86a2: return "GL_NUM_COMPRESSED_TEXTURE_FORMATS";
		case 0x851b: return "GL_PROXY_TEXTURE_CUBE_MAP";
		case 0x504: return "GL_STACK_UNDERFLOW";
		case 0xd1c: return "GL_ALPHA_SCALE";
		case 0xd02: return "GL_PACK_ROW_LENGTH";
		case 0x1101: return "GL_FASTEST";
		case 0x1500: return "GL_CLEAR";
		case 0x86af: return "GL_DOT3_RGBA";
		case 0x505: return "GL_OUT_OF_MEMORY";
		case 0xd03: return "GL_PACK_SKIP_ROWS";
		case 0x1102: return "GL_NICEST";
		case 0x1900: return "GL_COLOR_INDEX";
		case 0xd04: return "GL_PACK_SKIP_PIXELS";
		case 0x1901: return "GL_STENCIL_INDEX";
		case 0x700: return "GL_PASS_THROUGH_TOKEN";
		case 0x701: return "GL_POINT_TOKEN";
		case 0x702: return "GL_LINE_TOKEN";
		case 0x703: return "GL_POLYGON_TOKEN";
		case 0x704: return "GL_BITMAP_TOKEN";
		case 0x705: return "GL_DRAW_PIXEL_TOKEN";
		case 0x706: return "GL_COPY_PIXEL_TOKEN";
		case 0x707: return "GL_LINE_RESET_TOKEN";
		case 0x80: return "GL_FOG_BIT";
		case 0x1d01: return "GL_SMOOTH";
		case 0x2100: return "GL_MODULATE";
		case 0x2101: return "GL_DECAL";
		case 0xd32: return "GL_MAX_CLIP_PLANES";
		case 0x2500: return "GL_TEXTURE_GEN_MODE";
		case 0x2501: return "GL_OBJECT_PLANE";
		case 0x2900: return "GL_CLAMP";
		case 0x8750: return "GL_DEPTH_STENCIL_MESA";
		case 0x8751: return "GL_UNSIGNED_INT_24_8_MESA";
		case 0x8752: return "GL_UNSIGNED_INT_8_24_REV_MESA";
		case 0x8753: return "GL_UNSIGNED_SHORT_15_1_MESA";
		case 0x8754: return "GL_UNSIGNED_SHORT_1_15_REV_MESA";
		case 0x8759: return "GL_DEBUG_OBJECT_MESA";
		case 0x875a: return "GL_DEBUG_PRINT_MESA";
		case 0x875b: return "GL_DEBUG_ASSERT_MESA";
		case 0xb06: return "GL_CURRENT_RASTER_TEXTURE_COORDS";
		case 0x2502: return "GL_EYE_PLANE";
		case 0x2901: return "GL_REPEAT";
		case 0x8574: return "GL_ADD_SIGNED";
		case 0x86a3: return "GL_COMPRESSED_TEXTURE_FORMATS";
		case 0xd50: return "GL_SUBPIXEL_BITS";
		case 0x8c19: return "GL_PROXY_TEXTURE_1D_ARRAY_EXT";
		case 0xb07: return "GL_CURRENT_RASTER_POSITION";
		case 0xd54: return "GL_BLUE_BITS";
		case 0xffffffffL: return "GL_ALL_CLIENT_ATTRIB_BITS OR GL_CLIENT_ALL_ATTRIB_BITS";
		case 0xfffff: return "GL_ALL_ATTRIB_BITS";
		default: return "Unknown";
	}
}
